@mixin center-element ($size: 100){
  width: #{$size};
  height: #{$size};
  display:flex;
  justify-content:center;
  align-items:center;

}
@mixin flex-element{
display: flex;
 align-items: center;
 text-align: center;
}
@mixin img-repeat {
background-size: cover;
background-position: center;
background-repeat: no-repeat;

}


@mixin css3-prefix($property, $value) {
-webkit-#{$property}: #{$value};
-khtml-#{$property} : #{$value};
-moz-#{$property}   : #{$value};
-ms-#{$property}    : #{$value};
-o-#{$property}     : #{$value};
#{$property}        : #{$value};
}


@mixin background-gradient($startColor: #3c3c3c, $endColor: #999) {
background-color: $startColor;
background-image: -webkit-gradient(linear, left top, left bottom, from($startColor), to($endColor));
background-image: -webkit-linear-gradient(top, $startColor, $endColor);
background-image: -moz-linear-gradient(top, $startColor, $endColor);
background-image: -ms-linear-gradient(top, $startColor, $endColor);
background-image: -o-linear-gradient(top, $startColor, $endColor);
background-image: linear-gradient(top, $startColor, $endColor);
filter: progid:DXImageTransform.Microsoft.gradient(startColorStr='#{$startColor}', endColorStr='#{$endColor}');
}


@mixin background-horizontal($startColor: #3c3c3c, $endColor: #999) {
background-color: $startColor;
background-image: -webkit-gradient(linear, left top, right top, from($startColor), to($endColor));
background-image: -webkit-linear-gradient(left, $startColor, $endColor);
background-image: -moz-linear-gradient(left, $startColor, $endColor);
background-image: -ms-linear-gradient(left, $startColor, $endColor);
background-image: -o-linear-gradient(left, $startColor, $endColor);
background-image: linear-gradient(left, $startColor, $endColor);
filter: progid:DXImageTransform.Microsoft.gradient(startColorStr='#{$startColor}', endColorStr='#{$endColor}', gradientType='1');
}


@mixin background-radial($startColor: #fff, $startPos: 0%, $endColor: #000, $endPos:100%) {
background: -moz-radial-gradient(center, ellipse cover, $startColor $startPos, $endColor $endPos);
background: -webkit-gradient(radial, center center, 0px, center center, 100%, color-stop($startPos, $startColor), color-stop($endPos, $endColor));
background: -webkit-radial-gradient(center, ellipse cover, $startColor $startPos, $endColor $endPos);
background: -o-radial-gradient(center, ellipse cover, $startColor $startPos, $endColor $endPos);
background: -ms-radial-gradient(center, ellipse cover, $startColor $startPos, $endColor $endPos);
background: radial-gradient(ellipse at center, $startColor $startPos, $endColor $endPos);
}


@mixin background-size($width: 100%, $height: $width) {
@if type-of($width) == 'number' and $height != null {
  @include css3-prefix('background-size', $width $height);
} @else {
  @include css3-prefix('background-size', $width);
}
}



@mixin background-opacity($color: #000, $opacity: 0.85) {
background: $color;
background: rgba($color, $opacity);
}

@mixin border-radius($radius: 5px) {
@include css3-prefix('border-radius', $radius);
}


@mixin border-radius-separate($topLeftRadius: 5px, $topRightRadius: 5px, $bottomLeftRadius: 5px, $bottomRightRadius: 5px) {
-webkit-border-top-left-radius: $topLeftRadius;
-webkit-border-top-right-radius: $topRightRadius;
-webkit-border-bottom-right-radius: $bottomRightRadius;
-webkit-border-bottom-left-radius: $bottomLeftRadius;

-moz-border-radius-topleft: $topLeftRadius;
-moz-border-radius-topright: $topRightRadius;
-moz-border-radius-bottomright: $bottomRightRadius;
-moz-border-radius-bottomleft: $bottomLeftRadius;

border-top-left-radius: $topLeftRadius;
border-top-right-radius: $topRightRadius;
border-bottom-right-radius: $bottomRightRadius;
border-bottom-left-radius: $bottomLeftRadius;
}



@mixin box($orient: horizontal, $pack: center, $align: center) {
display: -webkit-box;
display: -moz-box;
display: box;

@include css3-prefix('box-orient', $orient);
@include css3-prefix('box-pack', $pack);
@include css3-prefix('box-align', $align);
}



@mixin box-rgba($r: 60, $g: 3, $b: 12, $opacity: 0.23, $color: #3c3c3c) {
background-color: transparent;
background-color: rgba($r, $g, $b, $opacity);
filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#{$color}', endColorstr='#{$color}');
zoom: 1;
}



@mixin box-shadow($x: 2px, $y: 2px, $blur: 8px, $color: rgba(0,0,0,.7), $inset: "") {
@if ($inset != "") {
  @include css3-prefix('box-shadow', $inset $x $y $blur $color);
} @else {
  @include css3-prefix('box-shadow', $x $y $blur $color);
}
}


@mixin box-sizing($type: border-box) {
@include css3-prefix('box-sizing', $type);
}



@mixin columns($count: 3, $gap: 10) {
@include css3-prefix('column-count', $count);
@include css3-prefix('column-gap', $gap);
}


@mixin double-borders($colorOne: #3c3c3c, $colorTwo: #999, $radius: 0) {
border: 1px solid $colorOne;

@include css3-prefix('box-shadow', 0 0 0 1px $colorTwo);

@include border-radius($radius);
}


@mixin flip($scaleX: -1) {
@include css3-prefix('transform', scaleX($scaleX));
filter: FlipH;
-ms-filter: "FlipH";
}


@mixin font-face($fontFamily: myFont, $eotFileSrc: 'myFont.eot', $woffFileSrc: 'myFont.woff', $ttfFileSrc: 'myFont.ttf', $svgFileSrc: 'myFont.svg', $svgFontID: '#myFont') {
font-family: $fontFamily;
src: url($eotFileSrc) format('eot'),
url($woffFileSrc) format('woff'),
url($ttfFileSrc) format('truetype'),
url($svgFileSrc + $svgFontID) format('svg');
}


@mixin opacity($opacity: 0.5) {
$opacityMultiplied: ($opacity * 100);

filter: alpha(opacity=$opacityMultiplied);
-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=" + $opacityMultiplied + ")";
@include css3-prefix('opacity', $opacity);
}


@mixin outline-radius($radius: 5px) {
@include css3-prefix('outline-radius', $radius);
}



@mixin resize($direction: both) {
@include css3-prefix('resize', $direction);
}



@mixin rotate($deg: 0, $m11: 0, $m12: 0, $m21: 0, $m22: 0) {
@include css3-prefix('transform', rotate($deg + deg));
filter: progid:DXImageTransform.Microsoft.Matrix(
    M11=#{$m11}, M12=#{$m12}, M21=#{$m21}, M22=#{$m22}, sizingMethod='auto expand');
zoom: 1;
}


@mixin text-shadow($x: 2px, $y: 2px, $blur: 5px, $color: rgba(0,0,0,.4)) {
text-shadow: $x $y $blur $color;
}


@mixin transform($params) {
@include css3-prefix('transform', $params);
}



@mixin transform-origin($params) {
@include css3-prefix('transform-origin', $params);
}



@mixin transform-style($style: preserve-3d) {
@include css3-prefix('transform-style', $style);
}


@mixin transition($properties...) {

@if length($properties) >= 1 {
  @include css3-prefix('transition', $properties);
} @else {
  @include css3-prefix('transition', "all 0.2s ease-in-out 0s");
}
}


@mixin triple-borders($colorOne: #3c3c3c, $colorTwo: #999, $colorThree: #000, $radius: 0) {
border: 1px solid $colorOne;

@include border-radius($radius);

@include css3-prefix('box-shadow', "0 0 0 1px #{$colorTwo}, 0 0 0 2px #{$colorThree}");
}

@mixin keyframes($animation-name) {
@-webkit-keyframes #{$animation-name} {
  @content;
}
@-moz-keyframes #{$animation-name} {
  @content;
}
@-ms-keyframes #{$animation-name} {
  @content;
}
@-o-keyframes #{$animation-name} {
  @content;
}
@keyframes #{$animation-name} {
  @content;
}
}

@mixin animation($str) {
@include css3-prefix('animation', $str);
}



@function calculateRem($size) {
$remSize: $size / 16px;
@return $remSize * 1rem;
}

@mixin font-size($size) {
font-size: $size;
font-size: calculateRem($size);
}

@mixin vertical-align($position: relative) {
position: $position;
top: 50%;
@include css3-prefix('transform', 'translateY(-50%)');
}


@mixin center-inside-element() {
position: absolute;
left: 50%;
top: 50%;
@include css3-prefix('transform', 'translate(-50%, -50%)');
}



// @mixin bp-ip4 {
//   @media only screen and (max-width: 320px) {
//     @content;
//   }
// }

// @mixin bp-ip6 {
//   @media only screen and (min-width: 321px) {
//     @content;
//   }
// }

// @mixin bp-ip6-plus {
//   @media only screen and (min-width: 376px) and (max-width: 414px) {
//     @content;
//   }
// }

// @mixin bp-tablet-vertical {
//   @media only screen and (min-width: 641px) {
//     @content;
//   }
// }

// @mixin bp-desktop-sm {
//   @media only screen and (min-width: 769px) {
//     @content;
//   }
// }

// @mixin bp-desktop-md {
//   @media only screen and (min-width: 1025px) {
//     @content;
//   }
// }

// @mixin bp-desktop-lg {
//   @media only screen and (min-width: 1367px) {
//     @content;
//   }
// }

// @mixin bp-desktop-ultra {
//   @media only screen and (min-width: 1441px) {
//     @content;
//   }
// }


// @mixin box-center-valign-content($height) {
//   height: $height;
//   line-height: $height;
//   display: block;
// }

// @mixin box-square($size) {
//   width: $size;
//   height: $size;
//   display: block;
// }

// @mixin placeholder {
//   &::-webkit-input-placeholder {
//     @content
//   }
//   &:-moz-placeholder {
//     @content
//   }
//   &::-moz-placeholder {
//     @content
//   }
//   &:-ms-input-placeholder {
//     @content
//   }
// }

// .no-gutter > [class*='col-'] {
//   padding-right: 0;
//   padding-left: 0;
// }

// @for $i from 10 through 100 {
//   .bottom-#{$i} {
//     margin-bottom: #{$i}px;
//     @include bp-tablet-vertical {
//       margin-bottom: #{$i * 2}px;
//     }
//     @include bp-desktop-md {
//       margin-bottom: #{$i * 3}px;
//     }
//   }
// }

// @for $i from 10 through 100 {
//   .top-#{$i} {
//     margin-top: #{$i}px
//   }
// }

// @mixin flex() {
//   //display: -webkit-box;
//   display: -moz-box;
//   display: -ms-flexbox;
//   display: -webkit-flex;
//   display: flex;
// }


// @mixin xl{
// @media screen and (max-width: 1200px){
//   @content;
// }
// }

// @mixin lg{
// @media screen and (max-width:992px){
//   @content;
// }
// }

// @mixin md{
// @media screen and (max-width: 767px){
//   @content;
// }
// }
// @mixin sm{
// @media screen and (max-width: 576px){
//   @content;
// }
// }

// @mixin xs{
// @media screen and (max-width: 500px){
//   @content;
// }
// }


@mixin xxl { @media (min-width: 1300px) { @content; } }

@mixin xl { @media (max-width: 1199) { @content; } }
  
@mixin ipadpro { @media (max-width: 1024px) { @content; } }
  
@mixin lg { @media (max-width: 991px) { @content; } } 
   
@mixin ipad { @media (max-width: 768px) { @content; } }
    
@mixin sm { @media (max-width: 575px) { @content; } }
 
@mixin xs { @media (max-width: 400px) { @content; } }










